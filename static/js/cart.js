document.addEventListener("DOMContentLoaded", () => {
  const container = document.getElementById("cart-list");
  let cart = JSON.parse(localStorage.getItem("cart") || "[]");

  function render() {
    container.innerHTML = "";

    if (cart.length === 0) {
      container.innerHTML = "<p>–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞ üòø</p>";
      document.getElementById('send-selected-btn').disabled = true;
      document.getElementById('send-form').style.display = 'none';
      return;
    }

    cart.forEach(cat => {
      const div = document.createElement("div");
      div.className = "cat-item";
      div.innerHTML = `
        <input type="checkbox" ${cat.selected ? "checked" : ""} data-id="${cat.id}" onchange="toggleCatSelection('${cat.id}')">
        <img src="${cat.img}" width="80">
        <div class="cat-info">
          <strong>${cat.name}</strong>
          <span>${cat.price}‚ÇΩ</span>
          <div class="cat-parts">${getCatPartsText(cat)}</div>
        </div>
        <button data-id="${cat.id}" class="remove-btn">‚ùå</button>
      `;
      container.appendChild(div);
    });

    updateSendButton();
  }

  function getCatPartsText(cat) {
    if (cat.parts) {
      return `–¢–µ–ª–æ:${cat.parts.body} –ì–æ–ª–æ–≤–∞:${cat.parts.head} –õ–∞–ø—ã:${cat.parts.paws} –•–≤–æ—Å—Ç:${cat.parts.tail}`;
    }
    return "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∫–æ—Ç";
  }

  window.toggleCatSelection = function(catId) {
    const cat = cart.find(c => c.id === catId);
    if (cat) {
      cat.selected = !cat.selected;
      localStorage.setItem("cart", JSON.stringify(cart));
      updateSendButton();
    }
  };

  function updateSendButton() {
    const selectedCount = cart.filter(c => c.selected).length;
    const sendBtn = document.getElementById('send-selected-btn');

    if (selectedCount > 0) {
      sendBtn.disabled = false;
      sendBtn.textContent = `üì∏ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–æ—Ç–æ–≤ (${selectedCount})`;
    } else {
      sendBtn.disabled = true;
      sendBtn.textContent = 'üì∏ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–æ—Ç–æ–≤';
    }
  }

  window.showSendForm = function() {
    const selectedCount = cart.filter(c => c.selected).length;
    if (selectedCount > 0) {
      document.getElementById('send-form').style.display = 'block';
    }
  };

  window.sendSelectedCats = async function() {
    const userEmail = document.getElementById('user-email').value.trim();
    const comment = document.getElementById('email-comment').value.trim();
    const messageEl = document.getElementById('send-message');

    if (!userEmail) {
      messageEl.innerHTML = "‚ùå –í–≤–µ–¥–∏—Ç–µ –≤–∞—à email –∞–¥—Ä–µ—Å";
      return;
    }

    const selectedCats = cart.filter(cat => cat.selected);

    if (selectedCats.length === 0) {
      messageEl.innerHTML = "‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ç–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏!";
      return;
    }

    messageEl.innerHTML = "üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ—Ç–æ–≤ –Ω–∞ –ø–æ—á—Ç—É...";

    try {
      const response = await fetch('/send_cats_email', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          email: userEmail,
          comment: comment,
          cats: selectedCats
        })
      });

      const result = await response.json();

      if (response.ok) {
        messageEl.innerHTML = "‚úÖ –ö–æ—Ç—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –ø–æ—á—Ç—É! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à email üêæ";
        showToast(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ${selectedCats.length} –∫–æ—Ç–æ–≤ –Ω–∞ ${userEmail}!`);

        // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
        document.getElementById('user-email').value = '';
        document.getElementById('email-comment').value = '';
        document.getElementById('send-form').style.display = 'none';

        // –°–Ω–∏–º–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –∫–æ—Ç–æ–≤
        selectedCats.forEach(cat => cat.selected = false);
        localStorage.setItem("cart", JSON.stringify(cart));
        render();
      } else {
        messageEl.innerHTML = "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: " + result.error;
        showToast("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ üòø");
      }
    } catch (error) {
      messageEl.innerHTML = "‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: " + error.message;
      showToast("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ üåê");
    }
  };

  window.clearCart = function() {
    if (confirm("–û—á–∏—Å—Ç–∏—Ç—å –≤—Å—é –∫–æ—Ä–∑–∏–Ω—É?")) {
      localStorage.setItem("cart", "[]");
      cart = [];
      render();
      showToast("–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞ üóëÔ∏è");
    }
  };

  container.addEventListener("click", e => {
    if (e.target.classList.contains("remove-btn")) {
      const id = e.target.dataset.id;
      cart = cart.filter(c => c.id !== id);
      localStorage.setItem("cart", JSON.stringify(cart));
      render();
      showToast("–ö–æ—Ç —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã ‚ùå");
    }
  });

  render();
});

function showToast(message) {
  const container = document.getElementById("toast-container");
  const toast = document.createElement("div");
  toast.className = "toast";
  toast.textContent = message;

  container.appendChild(toast);

  setTimeout(() => {
    toast.classList.add("fade-out");
    setTimeout(() => toast.remove(), 300);
  }, 3000);
}